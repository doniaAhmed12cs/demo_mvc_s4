@model IEnumerable<Department>
@{
    ViewData["Title"] = "All Departments";
    string ViewDataMessage = ViewData["Message"] as string;
     //  Enforce Type Safty => Strongly Typed
    string ViewBagMessage = ViewBag.Message;
     // Doesnot Enforce Type Saftey => Weakly Typed 

}
<div class="alert alert-success">
    @TempData["Message"]
</div>
@*
<div class=" alert alert-success">
    @ViewData["Message"]
</div>
<div class=" alert alert-success">
    @ViewBag.Message
</div>
*@

<a asp-action="Create" class="btn btn-success"> Create New Department</a>

@if (Model.Count() > 0)

{
    <h1> All Departments</h1>
    <br />
    <table class=" table table-striped table-hover mt-3">
        <thead>
        <td> @Html.DisplayNameFor(D => D.Code)</td>
        <td> @Html.DisplayNameFor(D => D.Name)</td>
        <td> @Html.DisplayNameFor(D => D.DateOfCreation)</td>
        <td> Details</td>
        <td> Update</td>
        <td> Delete</td>

        </thead>
        <tbody>
            @foreach (var department in Model)
            {
                <tr>
                    <td>@department.Code</td>
                    <td>@department.Name</td>
                    <td>@department.DateOfCreation</td>

                    <td><a asp-action="Details" asp-route-id="@department.Id"><i class="fas fa-eye"></i></a></td>

                    <td><a asp-action="Edit" asp-route-id="@department.Id"><i class="fas fa-edit"></i></a>   </td>
                    <td><a asp-action="Delete" asp-route-id="@department.Id"><i class="fas fa-trash"></i></a></td>


                </tr>
            }

        </tbody>
    </table>
}
else
{
    <div class="mt-5 alert alert-warning">
        <h3>  There Is No Department</h3>

    </div>
}

